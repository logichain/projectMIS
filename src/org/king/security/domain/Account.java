package org.king.security.domain;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.king.common.SearchBaseObject;
import org.king.common.post.Post;
import org.king.department.bean.Department;



/**
 * AbstractAccount generated by MyEclipse - Hibernate Tools
 */

public class Account extends SearchBaseObject implements java.io.Serializable {


    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	// Fields    

     private String id;
     private String name;
     private String password;
     private String enabled;
     private Integer flag;

     private String repassword;

     private Person person = new Person();
     //·ÏÆú
     private Set roles;
     
     private ArrayList<UsrPost> usrPostList = new ArrayList<UsrPost>();
     
    // Constructors

      
    /** full constructor */
    public Account(String name, String password, String enabled) {
        this.name = name;
        this.password = password;
        this.enabled = enabled;
    }

   
    // Property accessors

    public Account() {
		// TODO Auto-generated constructor stub
	}


	public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    public String getRepassword() {
		return repassword;
	}

	public void setRepassword(String repassword) {
		this.repassword = repassword;
	}

	public String getEnabled() {
        return this.enabled;
    }
    
    public void setEnabled(String enabled) {
        this.enabled = enabled;
    }

    
    
	public Person getPerson() {
		return person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	public Set getRoles() {
		return roles;
	}

	public void setRoles(Set roles) {
		this.roles = roles;
	}

	/**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object) {
		if (!(object instanceof Account)) {
			return false;
		}
		Account rhs = (Account) object;
		return new EqualsBuilder().append(this.password, rhs.password).append(
				this.enabled, rhs.enabled).append(this.name, rhs.name).append(
				this.id, rhs.id).isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode() {
		return new HashCodeBuilder(-1087829107, -1278696151).append(
				this.password).append(this.enabled).append(this.name).append(
				this.id).toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString() {
		return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)
				.append("name", this.name).append("id", this.id).append(
						"enabled", this.enabled).append("password",
						this.password).toString();
	}


	public boolean isAdmin() {
		boolean rtn = false;
		for(Object o:roles)
		{
			Role r = (Role) o;
			if("0".equals(r.getId()))
			{
				rtn = true;
				break;
			}			
		}		
		
		return rtn;
	}
		
	public void setUsrPostSet(Set<UsrPost> usrPostSet) {
		System.err.println(this.name);
		usrPostList.clear();
		usrPostList.addAll(usrPostSet);
	}

	public Set<UsrPost> getUsrPostSet() {
		Set<UsrPost> rtn = new HashSet<UsrPost>();
		rtn.addAll(usrPostList);

		return rtn;
	}

	public ArrayList<UsrPost> getUsrPostList() {
		return usrPostList;
	}


	public void setUsrPostList(ArrayList<UsrPost> usrPostList) {
		this.usrPostList = usrPostList;
	}
	
	public boolean getHasCreatePower()
	{
		boolean rtn = false;
		
		for(UsrPost up:usrPostList)
		{
			if(up.getDept() != null && up.getPost() != null && up.getPost().equals(Post.POST_PROJECT_SECRETARY))
			{
				rtn = true;
				break;
			}
		}
		
		return rtn;
 	}
	
	public ArrayList<Department> getCreatePowerDepartmentList()
	{
		ArrayList<Department> rtn = new ArrayList<Department>();
		for(UsrPost up:usrPostList)
		{
			if(up.getDept() != null && up.getPost() != null && up.getPost().equals(Post.POST_PROJECT_SECRETARY))
			{
				rtn.add(up.getDeptObject());
			}
		}
		
		return rtn;
	}
	
	public boolean isHavePost(Integer post)
	{
		boolean rtn = false;
		
		for(UsrPost up:usrPostList)
		{
			if(up.getPost() != null && up.getPost().equals(post))
			{
				rtn = true;
				break;
			}
		}
		
		return rtn;
	}
	
	public boolean isHavePost(Integer dept,Integer post)
	{
		boolean rtn = false;
		
		for(UsrPost up:usrPostList)
		{
			if(up.getPost() != null && up.getPost().equals(post) && up.getDept() != null && up.getDept().equals(dept))
			{
				rtn = true;
				break;
			}
		}
		
		return rtn;
	}
	public boolean getProjectManageSecretary()
	{
		return this.isHavePost(Department.DEPARTMENT_XIANGMU_GUANLI,Post.POST_PROJECT_SECRETARY);
	}
	
	public boolean haveNoAnyPost()
	{
		boolean rtn = true;
		
		for(UsrPost up:usrPostList)
		{
			if(up.getPost() != null && up.getDept() != null)
			{
				rtn = false;
				break;
			}
		}
		
		return rtn;
	}
	
	public ArrayList<Integer> getPostList()
	{
		ArrayList<Integer> rtn = new ArrayList<Integer>();
		
		for(UsrPost up:usrPostList)
		{
			if(up.getPost() != null)
			{
				rtn.add(up.getPost());
			}
		}
		
		return rtn;
	}
	
	public ArrayList<Integer> getDeptList()
	{
		ArrayList<Integer> rtn = new ArrayList<Integer>();
		
		for(UsrPost up:usrPostList)
		{
			if(up.getDept() != null && up.getPost() != null)
			{
				rtn.add(up.getDept());
			}
		}
		
		return rtn;
	}
	
	public ArrayList<Integer> getDeptListByPost(Integer post)
	{
		ArrayList<Integer> rtn = new ArrayList<Integer>();
		
		for(UsrPost up:usrPostList)
		{
			if(up.getDept() != null && up.getPost() != null && up.getPost().equals(post))
			{
				rtn.add(up.getDept());
			}
		}
		
		return rtn;
	}
	
	public String getDeptSQLListByPost(Integer post)
	{
		String rtn = "";
		
		ArrayList<Integer> deptList = this.getDeptListByPost(post);
		for(Integer dept:deptList)
		{
			rtn = rtn + "," + dept;
		}
		
		if(!rtn.isEmpty())
		{
			rtn = rtn.substring(1);			
		}
		
		return rtn;
	}
	
	public String getPostSQLList()
	{
		String rtn = "";
		
		ArrayList<Integer> postList = this.getPostList();
		for(Integer post:postList)
		{
			rtn = rtn + "," + post;
		}
		
		if(!rtn.isEmpty())
		{
			rtn = rtn.substring(1);			
		}
		
		return rtn;
	}


	public Integer getFlag() {
		return flag;
	}


	public void setFlag(Integer flag) {
		this.flag = flag;
	}
	
	 
}